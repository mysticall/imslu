
Mini HOWTO for IMSLU (Internet Management System for LAN Users) on Debian/GNU Linux

	Copyright © 2013 IMSLU Developers
    
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".
__________________________________________________________________

   Table of Contents
   
   1 Intro

		1.1 About IMSLU
		1.2 IMSLU Developers
			1.2.1 Others
		1.3 Legal Notice
		1.4 Other Information

	2 Installation and configuration

		2.1 Requirements
		2.2 Download and install
		2.3 Database server
		2.4 Apache2 and PHP5
		2.5 System settings
		2.6 bind9
		2.7 Roaring Penguin PPPoE server
		2.8 FreeRadius server
		2.9 FreeRadius client
		
	3 Scripts

	4 User Interface

___________________________________________________


Chapter 1. Intro

1.1 About IMSLU


1.2 IMSLU Developers

	* PHP Code:
	Fahri Hasan
	fahri_hasan@hotmail.com

	* Python Code:
	Fahri Hasan
		     
	* Design:
     Fahri Hasan
     
	* HTML, JavaScript, CSS:
     Fahri Hasan
     
	* Images:
     
	* Documentation:
     Fahri Hasan
     
	* Beta testing:
	 Veselin Alexandrov
     Fahri Hasan

	* http://www.linux-bg.org/forum/index.php?topic=45276:
	 Naka
	 gat3way
	 edmon
	   
1.2.1 Others

	IMSLU uses elements of other software:
		- http://www.zabbix.com/
		- http://www.zabbix.com/rn2.0.4.php
		- http://www.wikihow.com/Create-a-Secure-Login-Script-in-PHP-and-MySQL
		- http://www.wikihow.com/Create-a-Secure-Session-Managment-System-in-PHP-and-MySQL
		- http://pajhome.org.uk/crypt/md5/sha512.html - BSD License
	   
	Used selected content or guides:
		- (russian) http://habrahabr.ru/post/111399/
		- (en) Linux Advanced Routing & Traffic Control HOWTO - http://www.lartc.org/lartc.html
		- (bugarian) http://myfreesoft.net/phpBB2/viewtopic.php?t=751
		- (bugarian) http://www.linux-bg.org/cgi-bin/y/index.pl?page=article&id=advices&key=364103812
		- (bugarian) http://www.linux-bg.org/cgi-bin/y/index.pl?page=article&id=advices&key=386924398
		- Debian advanced router for ISP – firewall, traffic shaping, smp_affinity, taskset, sysctl and more … http://itservice-bg.net/?p=1122
		- (russian) http://linuxsnippets.net/ru/node/268
		- https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-apache-for-debian-7
		
		
1.3 Legal Notice

	Copyright © 2013 IMSLU Developers
	
	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.
 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
 
	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 
__________________________________________________________________

Chapter 2 Installation and configuration

   #################################
  #	                              #	
 #       2.1 Requirements        #
#	                            #
################################

	* OS - Linux, yet is fully compatible with Debian Wheezy
		- http://www.debian.org/
		
	* Apache2
		- http://www.apache.org/
		
	* PHP >= 5.4
		- http://php.net/
		
	* Database Server - during the development was used MariaDB
		- https://mariadb.org/

	* xtables-addons
		- http://xtables-addons.sourceforge.net/
	
	* Freeradius
		- http://freeradius.org/

	* Roaring Penguin PPPoE server
		- http://www.roaringpenguin.com/products/pppoe
	
	* Point-to-Point Protocol (PPP) - daemon
		- http://ppp.samba.org/
		
	* Python

		
	* Recommended	
	 
	
	* Debian Wheezy minimal install of a base system

		- http://www.debian.org/doc/books
		- http://www.wingfoss.com/content/install-debian6-squeeze


   #################################
  #	                              #	
 #   2.2 Download and install    #
#                               #
################################

Download from:
https://sourceforge.net/projects/imslu/
tar -zxvf imslu_0.1-alpha.tar.gz

OR
Get the latest development version.
git clone https://github.com/mysticall/imslu.git

cd imslu

mkdir /usr/share/imslu
cp -r PHP/* /usr/share/imslu

mkdir /etc/imslu
cp -r conf/debian/* /etc/imslu/
chmod +x /etc/imslu/scripts/*

mkdir /etc/imslu/backup
chown www-data:www-data /etc/imslu/backup

mkdir /var/log/imslu
cp conf/cron/imslu /etc/cron.d/


   #################################
  #	                              #	
 #       2.3 INSTALL MariaDB     #
#	                            #
################################

nano /etc/apt/sources.list.d/MariaDB.list
--------------------------------------------------------------------------------
# MariaDB 5.5 repository list
# http://mariadb.org/mariadb/repositories/
deb http://mirror.timeweb.ru/mariadb/repo/5.5/debian wheezy main
deb-src http://mirror.timeweb.ru/mariadb/repo/5.5/debian wheezy main
--------------------------------------------------------------------------------

gpg --keyserver keys.gnupg.net --recv-keys CBCB082A1BB943DB
gpg -a --export CBCB082A1BB943DB | apt-key add -

apt-get update
apt-get install mariadb-server

Hold MariaDB Client version on current:
echo libmysqlclient18 hold | dpkg --set-selections

If need to update MariaDB Client version:
echo libmysqlclient18 install | dpkg --set-selections

--------------------------------------------------------------------------------
CREATE IMSLU Database
--------------------------------------------------------------------------------
mysql -u root -p
CREATE DATABASE imslu DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
GRANT ALL PRIVILEGES ON imslu.* TO imslu@localhost IDENTIFIED BY 'imslu_password';
quit;

--------------------------------------------------------------------------------
CREATE Tables and inser data
--------------------------------------------------------------------------------
cd database/mysql

mysql -D imslu -u imslu -pimslu_password < 01_schema.sql
mysql -D imslu -u imslu -pimslu_password < 02_data.sql
mysql -D imslu -u imslu -pimslu_password < 03_example_static_ip-addresses.sql
mysql -D imslu -u imslu -pimslu_password < 04_freeradius_schema.sql
mysql -D imslu -u imslu -pimslu_password < 05_freeradius_data.sql
mysql -D imslu -u imslu -pimslu_password < 06_freeradius_example.sql
mysql -D imslu -u imslu -pimslu_password < 07_freeradius_example_ippool.sql

--------------------------------------------------------------------------------
APPLY pachtes
--------------------------------------------------------------------------------
mysql -D imslu -u imslu -pimslu_password < ../upgrades/mysql/01_patch-0.1-alpha-1.sql


   #################################
  #	                              #	
 #      2.4 Apache2 and PHP5     #
#	                            #
################################

apt-get install libapache2-mod-php5 php5-mysql

--------------------------------------------------------------------------------
EDIT Debian Session garbage collection
--------------------------------------------------------------------------------
#STOP cron

nano /etc/cron.d/php5
just comment #

And start PHP default garbage collection 
nano /etc/php5/apache2/php.ini
--------------------------------------------------------------------------------
session.gc_probability = 1
--------------------------------------------------------------------------------

Uncomment and set default timezone
nano /etc/php5/apache2/php.ini
--------------------------------------------------------------------------------
date.timezone = "Europe/Sofia"
--------------------------------------------------------------------------------

If error: Could not reliably determine the server's fully qualified domain name, using  for ServerName

At the bottom add
nano /etc/apache2/ports.conf
--------------------------------------------------------------------------------
ServerName 192.168.1.11
--------------------------------------------------------------------------------

mkdir /etc/apache2/ssl
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt

The most important line is "Common Name". Enter your official domain name here or, if you don't have one yet, your site's IP address.

example:
--------------------------------------------------------------------------------
Generating a 2048 bit RSA private key
............................................................+++
...........................................................+++
writing new private key to '/etc/apache2/ssl/apache.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:BG
State or Province Name (full name) [Some-State]:Sofia
Locality Name (eg, city) []:Sofia
Organization Name (eg, company) [Internet Widgits Pty Ltd]:imslu
Organizational Unit Name (eg, section) []:imslu
Common Name (e.g. server FQDN or YOUR name) []:192.168.1.253
Email Address []:webmaster@localhost
--------------------------------------------------------------------------------

a2enmod ssl
rm /etc/apache2/sites-enabled/default-ssl
rm /var/www/index.html
ln -s /etc/imslu/apache-ssl.conf /etc/apache2/sites-enabled/imslu-ssl
cp /etc/imslu/index.php /var/www

/etc/init.d/apache2 restart

  #################################
  #	                              #	
 #      2.5 System settings      #
#	                            #
################################

Change to:
nano /etc/sysctl.conf
--------------------------------------------------------------------------------
kernel.pid_max = 65536
kernel.randomize_va_space = 1

net.core.wmem_max = 8388608
net.core.rmem_max = 8388608

net.ipv4.tcp_synack_retries = 3
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 2048

net.ipv4.tcp_wmem = 4096 87380 8388608
net.ipv4.tcp_rmem = 4096 87380 8388608

#net.netfilter.nf_conntrack_expect_max = 4096
#net.ipv4.netfilter.ip_conntrack_generic_timeout = 600
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_sent = 5
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_sent2 = 5
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv = 5
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 86400
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_fin_wait = 10
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_close_wait = 10
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_last_ack = 10
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait = 10
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_close = 10
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_max_retrans = 300
#net.ipv4.netfilter.ip_conntrack_tcp_loose = 1
#net.ipv4.netfilter.ip_conntrack_tcp_be_liberal = 0
#net.ipv4.netfilter.ip_conntrack_tcp_max_retrans = 3
#net.ipv4.netfilter.ip_conntrack_udp_timeout = 10
#net.ipv4.netfilter.ip_conntrack_udp_timeout_stream = 180
#net.ipv4.netfilter.ip_conntrack_icmp_timeout = 10
#net.ipv4.netfilter.ip_conntrack_max = 131072

net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.all.log_martians = 0
net.ipv4.conf.all.arp_filter = 1
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1

net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 0
net.ipv4.conf.default.arp_filter = 1
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.default.arp_ignore = 1

net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1

net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_source_route = 0

net.ipv4.ip_forward = 1
--------------------------------------------------------------------------------
sysctl -p

nano /etc/rc.local
--------------------------------------------------------------------------------
#!/bin/sh -e

#modprobe ip_conntrack
sysctl -p
# change hashsize on the fly
# https://github.com/jeffmurphy/NetPass/blob/master/doc/netfilter_conntrack_perf.txt
#echo 32768 > /sys/module/nf_conntrack/parameters/hashsize

# check current hashsize
#cat /sys/module/nf_conntrack/parameters/hashsize

# check current tracked connections
#cat /proc/sys/net/ipv4/netfilter/ip_conntrack_count

#/etc/imslu/scripts/global_rules.py
# OR
#/etc/imslu/scripts/global_rules_vlans.py
--------------------------------------------------------------------------------

To prevent the login prompt from clearing the screen add the "--noclear" switch in /etc/inittab:
sed -i -e 's/1:2345:respawn:\/sbin\/getty 38400 tty1/1:2345:respawn:\/sbin\/getty --noclear 38400 tty1/' /etc/inittab

Exsample network settings:

nano /etc/network/interfaces
--------------------------------------------------------------------------------
auto lo
iface lo inet loopback

#LAN
auto eth0
iface eth0 inet manual
    pre-up ip link set dev $IFACE up

#WAN
auto eth1
iface eth1 inet manual
    pre-up ip link set dev $IFACE up
    post-up ip address add 192.168.1.254/24 dev $IFACE

#    post-up ip route add default scope global via 192.168.1.1

#    post-down ip route flush default
#    post-down ip route flush dev $IFACE
#    post-down ip address flush dev $IFACE
--------------------------------------------------------------------------------


   #################################
  #	                              #	
 #          2.6 bind9            #
#	                            #
################################
https://wiki.debian.org/Bind9

apt-get install bind9 

nano /etc/bind/named.conf.options 
Add after "listen-on-v6 { any; };"
--------------------------------------------------------------------------------
        listen-on { 127.0.0.1; 10.111.2.1; };

        allow-transfer { none; };
        allow-query { 127.0.0.1; 192.168.11.0/24; 10.111.1.0/24; 10.111.2.0/24; };
        allow-recursion { 127.0.0.1; 192.168.11.0/24; 10.111.1.0/24; 10.111.2.0/24; };

        // Do not make public version of BIND
        version none;
--------------------------------------------------------------------------------

Bind Chroot

/etc/init.d/bind9 stop

nano /etc/default/bind9
--------------------------------------------------------------------------------
OPTIONS="-u bind -t /var/bind9/chroot"
--------------------------------------------------------------------------------

mkdir -p /var/bind9/chroot/{etc,dev,var/cache/bind,var/run/named}
mknod /var/bind9/chroot/dev/null c 1 3
mknod /var/bind9/chroot/dev/random c 1 8
chmod 660 /var/bind9/chroot/dev/{null,random}
mv /etc/bind /var/bind9/chroot/etc
ln -s /var/bind9/chroot/etc/bind /etc/bind
chown -R bind:bind /etc/bind/*
chmod 775 /var/bind9/chroot/var/{cache/bind,run/named}
chgrp bind /var/bind9/chroot/var/{cache/bind,run/named}

nano /etc/init.d/bind9
--------------------------------------------------------------------------------
PIDFILE=/var/bind9/chroot/var/run/named/named.pid
--------------------------------------------------------------------------------

echo "\$AddUnixListenSocket /var/bind9/chroot/dev/log" > /etc/rsyslog.d/bind-chroot.conf


/etc/init.d/rsyslog restart; /etc/init.d/bind9 start


   #########################################
  #	                                      #	
 #    2.7 Roaring Penguin PPPoE server   #
#	                                    #
########################################

apt-get install ppp

cd /tmp
apt-get build-dep pppoe
apt-get source pppoe
cd rp-pppoe-3.8/src
./configure

Add kernel pppoe support
nano config.h
Befor:
/* #undef HAVE_LINUX_KERNEL_PPPOE */

After:
#define HAVE_LINUX_KERNEL_PPPOE 1

cd ..
./debian/rules PLUGIN_PATH=/usr/lib/pppd/2.4.5/rp-pppoe.so
./debian/rules binary
cd ..
dpkg -i pppoe_3.8-3_amd64.deb


Hold PPPoE Server version on current:
echo pppoe hold | dpkg --set-selections

If need to recompile and reinstall PPPoE Server:
echo pppoe install | dpkg --set-selections


Create PPPoE server configuration files

cat /dev/null > /etc/ppp/options 
nano /etc/ppp/options 
--------------------------------------------------------------------------------
lock
--------------------------------------------------------------------------------

cat /dev/null > /etc/ppp/pppoe-server-options
nano /etc/ppp/pppoe-server-options
--------------------------------------------------------------------------------
auth
refuse-pap
refuse-mschap
refuse-mschap-v2
refuse-eap
require-chap

mtu 1492
mru 1492

default-asyncmap
lcp-echo-adaptive
lcp-echo-interval 60
lcp-echo-failure 1

ms-dns 10.111.1.1
name my_isp

plugin radius.so
plugin radattr.so

noaccomp
nobsdcomp
nodefaultroute
nodeflate
noendpoint
noipdefault
noipx
noktune
noproxyarp
novj
novjccomp
receive-all

logfile /var/log/pppoe-server.log
#debug
#kdebug 1
--------------------------------------------------------------------------------

And runlevel pppoe server start script
nano /etc/init.d/pppoe-server
--------------------------------------------------------------------------------
#!/bin/sh

### BEGIN INIT INFO
# Provides:          pppoe-server
# Required-Start:    $network $syslog
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Roaring Peguin PPPoE server
# Description:       Roaring Peguin PPPoE server
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin

. /lib/lsb/init-functions

NAME="pppoe-server"
PROGRAM="/usr/sbin/pppoe-server"
CONFIG="/etc/default/pppoe-server"
DESCR="Roaring Peguin PPPoE Server"

if [ -r /etc/default/$NAME ]; then
  . /etc/default/$NAME
fi

case "$1" in
	start)
		log_daemon_msg "Starting $DESCR"
		STATUS=`ps ax | awk '$5 == "/usr/sbin/pppoe-server" { print $1 }'`
		if [ -z "${STATUS}" ]; then
			$PROGRAM $OPTIONS
			res=0
		else
			res=1
		fi
        case "$res" in
                0) log_end_msg 0 ;;
                1) log_progress_msg "already started"
                   log_end_msg 0 ;;
                *) log_end_msg 1 ;;
        esac

	;;
	stop)
		log_daemon_msg "Stopping $DESCR"
		SRV_STATUS=`ps ax | awk '$5 == "/usr/sbin/pppoe-server" { print $1 }'`		
		if [ -n "${SRV_STATUS}" ]; then

			CLT_STATUS=`ps ax | awk '$5 == "pppd" { print $1 }'`
			# kill all pppoe sessions
			if [ -n "${CLT_STATUS}" ]; then
				for PID in $CLT_STATUS; do
					kill -HUP $PID
				done
			fi
			# stop pppoe-server
			for PID in $SRV_STATUS; do
				kill -KILL $PID
			done
			res=0
		else
			res=1
		fi
        case "$res" in
                0) log_end_msg 0 ;;
                1) log_progress_msg "already stopped"
                   log_end_msg 0 ;;
                *) log_end_msg 1 ;;
        esac

	;;
	restart)
		$0 stop
		sleep 1
		$0 start
	;;
        status)
                status_of_proc "$PROGRAM" "$NAME" && exit 0 || exit $?
	;;
	*)
		log_success_msg "Usage: /etc/init.d/pppoe-server {start|stop|restart|status}"
		exit 1
	;;
esac
exit 0
--------------------------------------------------------------------------------

Make executable
chmod +x /etc/init.d/pppoe-server

nano /etc/default/pppoe-server
--------------------------------------------------------------------------------
# Options, that provided to pppoe-server
OPTIONS="-I eth0 -L 10.111.1.1/32 -k"

# If you plan to use VLANs uncomment next line, VLANs must be created before start pppoe-server
#OPTIONS="-I vlan10 -I vlan11 -I vlan12 -I vlan13 -I vlan14 -I vlan15 
		 -I vlan16 -I vlan17 -I vlan18 -I vlan19 -I vlan20 -I vlan21 
		 -I vlan22 -I vlan23 -I vlan24 -I vlan25 -I vlan26 -I vlan27 
		 -I vlan28 -I vlan29 -I vlan30 -I vlan31 -I vlan32 -I vlan33 
		 -L 10.111.1.1/32 -k"

#   -I if_name     -- Specify interface (default eth0.)
#   -T timeout     -- Specify inactivity timeout in seconds.
#   -C name        -- Set access concentrator name.
#   -m MSS         -- Clamp incoming and outgoing MSS options.
#   -L ip          -- Set local IP address.
#   -l             -- Increment local IP address for each session.
#   -R ip          -- Set start address of remote IP pool.
#   -S name        -- Advertise specified service-name.
#   -O fname       -- Use PPPD options from specified file
#                     (default /etc/ppp/pppoe-server-options).
#   -p fname       -- Optain IP address pool from specified file.
#   -N num         -- Allow 'num' concurrent sessions.
#   -o offset      -- Assign session numbers starting at offset+1.
#   -f disc:sess   -- Set Ethernet frame types (hex).
#   -s             -- Use synchronous PPP mode.
#   -X pidfile     -- Write PID and lock pidfile.
#   -q /path/pppd  -- Specify full path to pppd.
#   -Q /path/pppoe -- Specify full path to pppoe.
#   -k             -- Use kernel-mode PPPoE.
#   -u             -- Pass 'unit' option to pppd.
#   -r             -- Randomize session numbers.
#   -d             -- Debug session creation.
#   -x n           -- Limit to 'n' sessions/MAC address.
#   -P             -- Check pool file for correctness and exit.
#   -i             -- Ignore PADI if no free sessions.
#   -h             -- Print usage information.
--------------------------------------------------------------------------------

Start rules for connected users
nano /etc/ppp/ip-up.d/0001shaper
--------------------------------------------------------------------------------
#!/bin/bash

/etc/imslu/scripts/ppp_on.py $1 $5

exit 0
--------------------------------------------------------------------------------
chmod +x /etc/ppp/ip-up.d/0001shaper

Clear tc rulen on external interface for disconnected users
nano /etc/ppp/ip-down.d/0001shaper
--------------------------------------------------------------------------------
#!/bin/bash

/etc/imslu/scripts/ppp_off.py $1 $5

exit 0
--------------------------------------------------------------------------------
chmod +x /etc/ppp/ip-down.d/0001shaper


   #################################
  #	                              #	
 #     2.8 FreeRadius server     #
#	                            #
################################


apt-get install freeradius freeradius-mysql

Setting Up Freeradius

Remove 
rm /etc/freeradius/sites-enabled/inner-tunnel

Edit freeradius config files

cat /dev/null > /etc/freeradius/radiusd.conf
nano /etc/freeradius/radiusd.conf
--------------------------------------------------------------------------------
prefix = /usr
exec_prefix = /usr
sysconfdir = /etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = /var/log/freeradius
raddbdir = /etc/freeradius
radacctdir = ${logdir}/radacct

name = freeradius

confdir = ${raddbdir}
run_dir = ${localstatedir}/run/${name}

db_dir = ${raddbdir}

libdir = /usr/lib/freeradius
pidfile = ${run_dir}/${name}.pid

user = freerad
group = freerad

max_request_time = 30
cleanup_delay = 5
# requests 256 = 1 client
# requests 5120 = 20 clients
max_requests = 5120

listen {
	type = auth
	ipaddr = 127.0.0.1
#	ipv6addr = ::	# any.  ::1 == localhost
	port = 1812
#	interface = eth0	
}

listen {
	type = acct
	ipaddr = 127.0.0.1
#	ipv6addr = ::	# any.  ::1 == localhost
	port = 1813
#	interface = eth0	
}

hostname_lookups = no
allow_core_dumps = no

regular_expressions	= yes
extended_expressions = yes

log {
	destination = files
	file = ${logdir}/radius.log
	syslog_facility = daemon
	stripped_names = yes
	auth = yes
	auth_badpass = yes
	auth_goodpass = no
}

checkrad = ${sbindir}/checkrad

security {
	max_attributes = 200
	reject_delay = 1
	status_server = no
}

proxy_requests  = no

thread pool {
	start_servers = 5
	max_servers = 32
	min_spare_servers = 3
	max_spare_servers = 10
	max_requests_per_server = 0
}

modules {
#	$INCLUDE ${confdir}/modules/
    $INCLUDE ${confdir}/modules/chap
    $INCLUDE ${confdir}/modules/checkval
    $INCLUDE ${confdir}/modules/expiration
    $INCLUDE ${confdir}/modules/always
    $INCLUDE ${confdir}/modules/acct_unique
    $INCLUDE ${confdir}/sql.conf
    $INCLUDE ${confdir}/sql/mysql/counter.conf
    $INCLUDE ${confdir}/sqlippool.conf
}

instantiate {

}

$INCLUDE ${confdir}/policy.conf
$INCLUDE ${confdir}/sites-enabled/
--------------------------------------------------------------------------------

cat /dev/null > /etc/freeradius/sql.conf
nano /etc/freeradius/sql.conf
--------------------------------------------------------------------------------
sql {
	database = "mysql"
	driver = "rlm_sql_${database}"
	server = "localhost"
	#port = 3306
	login = "imslu" # Change with your settings!
	password = "imslu_password" # Change with your settings!
	radius_db = "imslu" # Change with your settings!
	acct_table1 = "radacct"
	acct_table2 = "radacct"
	
	postauth_table = "radpostauth"
	authcheck_table = "radcheck"
	authreply_table = "radreply"
	groupcheck_table = "radgroupcheck"
	groupreply_table = "radgroupreply"
	usergroup_table = "radusergroup"
	
	deletestalesessions = yes
	
	sqltrace = no
	sqltracefile = ${logdir}/sqltrace.sql
	
	num_sql_socks = 5
	connect_failure_retry_delay = 60
	lifetime = 0
	max_queries = 0
	
	readclients = yes
	nas_table = "nas"
	
	$INCLUDE sql/${database}/dialup.conf
}
--------------------------------------------------------------------------------

cat /dev/null > /etc/freeradius/sqlippool.conf 
nano /etc/freeradius/sqlippool.conf 
--------------------------------------------------------------------------------
sqlippool {
	sql-instance-name = "sql"
	ippool_table = "radippool"
	lease-duration = 190     # in seconds - 60 sec = 1 min
	pool-key = "%{NAS-Port}"
	#pool-key = "%{Calling-Station-Id}"

$INCLUDE sql/mysql/ippool.conf

## Logging configuration. (Comment out to disable logging)
# sqlippool_log_exists = "Existing IP: %{reply:Framed-IP-Address} \
#  (did %{Called-Station-Id} cli %{Calling-Station-Id} port %{NAS-Port} user %{User-Name})"

# sqlippool_log_success = "Allocated IP: %{reply:Framed-IP-Address} from %{control:Pool-Name} \
#  (did %{Called-Station-Id} cli %{Calling-Station-Id} port %{NAS-Port} user %{User-Name})"

# sqlippool_log_clear = "Released IP %{Framed-IP-Address}\
# (did %{Called-Station-Id} cli %{Calling-Station-Id} user %{User-Name})"

# sqlippool_log_failed = "IP Allocation FAILED from %{control:Pool-Name} \
#  (did %{Called-Station-Id} cli %{Calling-Station-Id} port %{NAS-Port} user %{User-Name})"

# sqlippool_log_nopool = "No Pool-Name defined \
#  (did %{Called-Station-Id} cli %{Calling-Station-Id} port %{NAS-Port} user %{User-Name})"

 defaultpool = "main_pool"
}
--------------------------------------------------------------------------------

Add payment policy in file top or end
nano /etc/freeradius/policy.conf
--------------------------------------------------------------------------------
# policy {

    # unlang scripts
    check_payment {

        expiration {
                userlock = 1
        }

        # Check for new payment, if not exist redirect to group expired
        if (userlock) {

            update control {
                Tmp-String-1 := "%{sql:SELECT DATE_FORMAT(`expires`, '%%d %%b %%Y %%H:%%i:%%s') AS expires FROM payments \
                                       WHERE username='%{User-Name}' AND expires > NOW() ORDER BY expires DESC LIMIT 1}"
            }
            
            if ("%{control:Tmp-String-1}") {

                update control {
                    Tmp-String-2 := "%{sql:UPDATE radcheck SET value='%{control:Tmp-String-1}' \
                                           WHERE username='%{User-Name}' AND attribute='Expiration'}"
                    Auth-Type := Reject
                }
            }
            else {

                update reply {
                    Reply-Message += "Restricted Access"
                    Session-Timeout := 600
                }

                update control {
                    Auth-Type := Accept
                    Pool-Name := expired
                }
                ok
            }
        }
    }

    check_free_access {

        if ("%{sql:SELECT users.free_access FROM radcheck \
                   LEFT JOIN users ON radcheck.userid = users.userid \
                   WHERE radcheck.username='%{User-Name}' GROUP BY radcheck.username}" == 1) {

            update reply {
                Reply-Message += "Free Access"
                Session-Timeout := 777600
            }
            ok
        }
        else {
            check_payment
        }
     }
# }
--------------------------------------------------------------------------------


cat /dev/null > /etc/freeradius/sites-available/default
nano /etc/freeradius/sites-available/default
--------------------------------------------------------------------------------
authorize {
    chap
    sql {
        ok = 1
    }

    if (ok) {
 
         # Check for MAC Address, if not exist update and check MAC
         if (!"%{control:Calling-Station-Id}") {

            update control {
                Tmp-String-0 := "%{sql:UPDATE radcheck SET value='%{Calling-Station-Id}' \
                                       WHERE username='%{User-Name}' AND attribute='Calling-Station-Id'}"

                Calling-Station-Id := "%{Calling-Station-Id}"
            }
        }
        checkval
        check_free_access
    }
}

authenticate {
    Auth-Type CHAP {
            chap
    }
}

preacct {
    acct_unique
}

accounting {
    sql
    sqlippool
}

session {
    sql {
        ok = 1
    }

    if (ok) {
        if ("%{sql:UPDATE radacct SET acctstoptime=ADDDATE(acctstarttime,INTERVAL acctsessiontime SECOND), acctterminatecause='Clear-Stale Session' \
                   WHERE username='%{User-Name}' and callingstationid='%{Calling-Station-Id}' and acctstoptime IS NULL}") {
        }
    }
}

post-auth {
    sql
    sqlippool
}
--------------------------------------------------------------------------------

Uncomment simul_count_query
nano /etc/freeradius/sql/mysql/dialup.conf 
--------------------------------------------------------------------------------
        #Uncomment simul_count_query to enable simultaneous use checking
        simul_count_query = "SELECT COUNT(*) \
                             FROM ${acct_table1} \
                             WHERE username = '%{SQL-User-Name}' \
                             AND acctstoptime IS NULL"
--------------------------------------------------------------------------------

Change message for expired users in module expiration
nano /etc/freeradius/modules/expiration
--------------------------------------------------------------------------------
expiration {
	#reply-message = "Password Has Expired\r\n" 
	reply-message = "Your account has expired, %{User-Name}\r\n"
}
--------------------------------------------------------------------------------


Source: http://abills.net.ua/wiki/doku.php/abills:docs:linux:pppd_radattr:ru
Add on end
nano /etc/freeradius/dictionary
--------------------------------------------------------------------------------
#
# Limit session traffic
#
ATTRIBUTE       Session-Octets-Limit            227     integer
# What to assume as limit - 0 in+out, 1 in, 2 out, 3 max(in,out)
ATTRIBUTE       Octets-Direction                228     integer
# Connection Speed Limit
ATTRIBUTE       PPPD-Upstream-Speed-Limit       230     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit     231     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-1     232     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-1   233     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-2     234     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-2   235     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-3     236     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-3   237     integer
ATTRIBUTE       Acct-Interim-Interval            85     integer
--------------------------------------------------------------------------------

/etc/init.d/freeradius start
chmod 755 /var/log/freeradius


   #################################
  #	                              #	
 #     2.9 FreeRadius client     #
#	                            #
################################

apt-get install radiusclient1

Edit files

cat /dev/null > /etc/radiusclient/servers
nano /etc/radiusclient/servers
--------------------------------------------------------------------------------
localhost	my_isp_radius_secret
--------------------------------------------------------------------------------

cat /dev/null > /etc/radiusclient/radiusclient.conf
nano /etc/radiusclient/radiusclient.conf
--------------------------------------------------------------------------------
auth_order      radius
login_tries     4
login_timeout   60
nologin /etc/nologin
issue   /etc/radiusclient/issue
# RADIUS settings 
authserver 127.0.0.1:1812 
acctserver 127.0.0.1:1813
servers         /etc/radiusclient/servers
dictionary      /etc/radiusclient/dictionary
login_radius    /usr/sbin/login.radius
# RADIUS server
seqfile         /var/run/radius.seq
mapfile         /etc/radiusclient/port-id-map
default_realm
radius_timeout  10
radius_retries  3
login_local     /bin/login
--------------------------------------------------------------------------------

Source: http://abills.net.ua/wiki/doku.php/abills:docs:linux:pppd_radattr:ru
Add on end
nano /etc/radiusclient/dictionary
--------------------------------------------------------------------------------
#
# Limit session traffic
#
ATTRIBUTE       Session-Octets-Limit            227     integer
# What to assume as limit - 0 in+out, 1 in, 2 out, 3 max(in,out)
ATTRIBUTE       Octets-Direction                228     integer
# Connection Speed Limit
ATTRIBUTE       PPPD-Upstream-Speed-Limit       230     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit     231     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-1     232     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-1   233     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-2     234     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-2   235     integer
ATTRIBUTE       PPPD-Upstream-Speed-Limit-3     236     integer
ATTRIBUTE       PPPD-Downstream-Speed-Limit-3   237     integer
ATTRIBUTE       Acct-Interim-Interval            85     integer
--------------------------------------------------------------------------------

#################################################################################


   #################################
  #	                              #	
 #          3 Scripts            #
#	                            #
################################

Install system tools:

apt-get install sudo vlan arp-scan arping python-mysql.connector python-ipcalc

echo "3 EXPIRED" >> /etc/iproute2/rt_tables
Create routing table for expired users

http://linuxsnippets.net/ru/node/268
Support of module IPMARK on Debian Wheezy
--------------------------------------------------------------------------------
aptitude update
aptitude install module-assistant xtables-addons-source xtables-addons-common
m-a prepare
m-a auto-install xtables-addons-source
depmod -a
--------------------------------------------------------------------------------

PHP use sudo to start python scripts, that need root access
Add to /etc/sudoers as exsample:
nano /etc/sudoers
--------------------------------------------------------------------------------
# Cmnd alias specification
Cmnd_Alias      PYTHON = /usr/bin/python
Cmnd_Alias      IP = /sbin/ip
Cmnd_Alias      KILL = /bin/kill
Cmnd_Alias      ARPING = /usr/sbin/arping

#Cmnd_Alias      IPTABLES = /sbin/iptables
#Cmnd_Alias      TC = /sbin/tc


# Allow members of group www-data to execute commands
%www-data ALL=NOPASSWD: PYTHON, IP, KILL, ARPING
--------------------------------------------------------------------------------
/etc/init.d/sudo restart

python-mysql.connector is python implementation of MySQL Client/Server protocol.
For more details see:
http://dev.mysql.com/doc/refman/5.5/en/connector-python.html
http://www.python.org/dev/peps/pep-0249/

Log all lines started whit "^\[ *[0-9]*\.[0-9]*\] IP_STATUS: " in "/var/log/ip_status.log".
The system will use this file to determine which IP address is active.

nano /etc/rsyslog.d/ip_status.conf
--------------------------------------------------------------------------------
:msg, regex, "^\[ *[0-9]*\.[0-9]*\] IP_STATUS: " -/var/log/ip_status.log
& ~
--------------------------------------------------------------------------------
/etc/init.d/rsyslog restart


   #################################
  #	                              #	
 #       3.1 config.py           #
#	                            #
################################

Edit config files:
- /etc/imslu/scripts/config.py
- /etc/imslu/config.php
- /etc/imslu/database_config.php


   #################################
  #	                              #	
 #       User Interface          #
#	                            #
################################

Group:    System administrators
User:     sadmin
Password: sadmin

Group:    Administrators
User:     admin
Password: admin
